var search_data = {"index":{"searchIndex":["cassandra","cors","dbprepare","indexget","load","loginpost","medicineget","medicinepost","object","optcors","permissionerr","serverconfig","sinatra","auth","verifydata","usersget","userspost","verifycodepost","allow()","defaults()","execute()","helpers()","is_filled()","new()","new()","preload()","protection!()","router()","verify!()","copying","docs-license","dockerfile","dockerfile-native","gemfile","gemfile.lock","readme","await.sh","config.ru","drop-any-table","select-all-kind-of-users","select-all-tables","select-all.gql","create-table","insert.gql","select.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","select.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","select.gql","docker-compose.json"],"longSearchIndex":["cassandra","cors","dbprepare","indexget","load","loginpost","medicineget","medicinepost","object","optcors","permissionerr","serverconfig","sinatra","sinatra::auth","sinatra::verifydata","usersget","userspost","verifycodepost","cors::allow()","serverconfig::defaults()","cassandra#execute()","load::helpers()","cassandra#is_filled()","cassandra::new()","permissionerr::new()","dbprepare::preload()","sinatra::auth#protection!()","load::router()","sinatra::verifydata#verify!()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Cassandra","","Cassandra.html","","<p>Class to connect to Cassandra On Datastax by Graphql API\n"],["Cors","","Cors.html","","<p>Configure Cors Headers\n"],["DbPrepare","","DbPrepare.html","","<p>Load the Graphql Queries on Memoryputs\n"],["IndexGet","","IndexGet.html","",""],["Load","","Load.html","",""],["LoginPost","","LoginPost.html","","<p>Realize Login for any type of user\n"],["MedicineGet","","MedicineGet.html","",""],["MedicinePost","","MedicinePost.html","",""],["Object","","Object.html","",""],["OptCors","","OptCors.html","",""],["PermissionErr","","PermissionErr.html","",""],["ServerConfig","","ServerConfig.html","","<p>Sinatra Configurations\n"],["Sinatra","","Sinatra.html","","<p>Checks if user is authenticated, if not send a error back to client\n<p>Checks if user is authenticated, if …\n"],["Sinatra::Auth","","Sinatra/Auth.html","",""],["Sinatra::VerifyData","","Sinatra/VerifyData.html","",""],["UsersGet","","UsersGet.html","",""],["UsersPost","","UsersPost.html","",""],["VerifyCodePost","","VerifyCodePost.html","",""],["allow","Cors","Cors.html#method-c-allow","(allowed_origins = \"*\", methods = \"POST, GET, PATCH, DELETE, OPTIONS\", credentials = \"true\")",""],["defaults","ServerConfig","ServerConfig.html#method-c-defaults","()",""],["execute","Cassandra","Cassandra.html#method-i-execute","(query, vars = {}, adm = false)",""],["helpers","Load","Load.html#method-c-helpers","()","<p>Load Helpers\n"],["is_filled","Cassandra","Cassandra.html#method-i-is_filled","()",""],["new","Cassandra","Cassandra.html#method-c-new","(config)",""],["new","PermissionErr","PermissionErr.html#method-c-new","(msg = \"User Dont Have Permission to Acess\")",""],["preload","DbPrepare","DbPrepare.html#method-c-preload","()",""],["protection!","Sinatra::Auth","Sinatra/Auth.html#method-i-protection-21","(allowed = [1,2,3])",""],["router","Load","Load.html#method-c-router","()","<p>Load Controllers\n"],["verify!","Sinatra::VerifyData","Sinatra/VerifyData.html#method-i-verify-21","(data = {}, required)",""],["COPYING","","COPYING_txt.html","","\n<pre>                   GNU AFFERO GENERAL PUBLIC LICENSE\n                      Version 3, 19 November 2007 ...</pre>\n"],["DOCS-LICENSE","","DOCS-LICENSE_txt.html","","\n<pre>               GNU Free Documentation License\n                Version 1.3, 3 November 2008\n\nCopyright ...</pre>\n"],["Dockerfile","","Dockerfile.html","","<p>#    Copyright © 2023 Felipe Chiozzotto Gozzani, Heloísa Real, Juliana Barbosa Sandes, Mateus Felipe …\n"],["Dockerfile-native","","Dockerfile-native.html","","<p>#    Copyright © 2023 Felipe Chiozzotto Gozzani, Heloísa Real, Juliana Barbosa Sandes, Mateus Felipe …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org” # Package Repository\n<p>gem “sinatra” # Web Framework\n<p>gem “puma” …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  amq-protocol (2.3.2)\n  argon2 (2.2.0)\n    ffi (~&gt; 1.15)\n   ...</pre>\n"],["Readme","","Readme_md.html","","<p>MedTempo Ruby Backend\n<p><strong>Copyright © 2023 Felipe Chiozzotto Gozzani, Heloísa Real, Juliana Barbosa Sandes,</strong> …\n"],["await.sh","","await_sh.html","","<p>#!/bin/bash \n<p>sleep 15;\n<p>bundle exec rackup –port 7777 –host 0.0.0.0\n"],["config.ru","","config_ru.html","","<p>require ‘./trigger’ run Sinatra::Application\n"],["drop-any-table","","db-operations/generic/drop-any-table.html","","<p>mutation DropAnyTable($table: String!){\n\n<pre>drop: dropTable(keyspaceName:&quot;medtempo&quot;, tableName: $table)</pre>\n<p>}\n"],["select-all-kind-of-users","","db-operations/generic/select-all-kind-of-users_txt.html","","<p>query SelectAllUser {\n\n<pre>user_pessoal: usuario_pessoal {\n  values{\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"],["select-all-tables","","db-operations/generic/select-all-tables.html","","<p>query GetTables($keyspace: String!){\n\n<pre>keyspace(name: $keyspace){\n    name\n    tables {\n        name\n   ...</pre>\n"],["select-all.gql","","db-operations/generic/select-all_gql.html","","<p>query GetTables($keyspace: String!){\n\n<pre>keyspace(name: $keyspace){\n    name\n    tables {\n        name\n   ...</pre>\n"],["create-table","","db-operations/medicamentos/create-table_txt.html","","<p>mutation createMedicamentos {\n\n<pre>medicamentos: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: &quot;medicamentos&quot; ...</pre>\n"],["insert.gql","","db-operations/medicamentos/insert_gql.html","","<p>mutation InsertMedicamentos(\n\n<pre>$id: Uuid!,\n$usuario_especialista: String!,\n$usuario_pessoal: String!,\n\n$nome: ...</pre>\n"],["select.gql","","db-operations/medicamentos/select_gql.html","","<p>query SelectMedicamentos ($user: String!, $medico: String!) {\n\n<pre>medicamentos: medicamentos(value: { usuario_pessoal: ...</pre>\n"],["create-table","","db-operations/user-especialista/create-table_txt.html","","<p>mutation createTableUsersEspecialista {\n\n<pre>usuario_especialista: createTable(\n  keyspaceName: &quot;medtempo&quot; ...</pre>\n"],["insert.gql","","db-operations/user-especialista/insert_gql.html","","<p>mutation InsertUserEspecialista(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-especialista/select-one-with-pass_gql.html","","<p>query SelectOneUserEspecialistaWithPass($user: String!){\n\n<pre>usuario_especialista(value: { email: $user }){ ...</pre>\n"],["select-one.gql","","db-operations/user-especialista/select-one_gql.html","","<p>query SelectOneUserEspecialista($user: String!){\n\n<pre>usuario_especialista(value: { email: $user }){\n  values ...</pre>\n"],["select.gql","","db-operations/user-especialista/select_gql.html","","<p>query SelectAllUserEspecialista {\n\n<pre>usuario_especialista {\n  values {\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"],["create-table","","db-operations/user-familiar/create-table_txt.html","","<p>mutation createTableUsersFamiliar {\n\n<pre>usuario_familiar: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: ...</pre>\n"],["insert.gql","","db-operations/user-familiar/insert_gql.html","","<p>mutation InsertUserFamiliar(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-familiar/select-one-with-pass_gql.html","","<p>query SelectOneUserFamiliarWithPass($user: String!){\n\n<pre>usuario_familiar(value: { email: $user }){\n  values ...</pre>\n"],["select-one.gql","","db-operations/user-familiar/select-one_gql.html","","<p>query SelectOneUserFamiliar($user: String!){\n\n<pre>usuario_familiar(value: { email: $user }){\n  values {\n   ...</pre>\n"],["create-table","","db-operations/user-pessoal/create-table_txt.html","","<p>mutation createTableUsersPessoal {\n\n<pre>usuario_pessoal: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: ...</pre>\n"],["insert.gql","","db-operations/user-pessoal/insert_gql.html","","<p>mutation InsertUserPessoal(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-pessoal/select-one-with-pass_gql.html","","<p>query SelectOneUserPessoalWithPass($user: String!){\n\n<pre>usuario_pessoal(value: { email: $user }){\n  values ...</pre>\n"],["select-one.gql","","db-operations/user-pessoal/select-one_gql.html","","<p>query SelectOneUserPessoal($user: String!){\n\n<pre>usuario_pessoal(value: { email: $user }){\n  values {\n    id, ...</pre>\n"],["select.gql","","db-operations/user-pessoal/select_gql.html","","<p>query SelectAllUserPessoal {\n\n<pre>usuario_pessoal {\n  values {\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"],["docker-compose.json","","docker-compose_json.html","","<p>{\n\n<pre>&quot;version&quot;: &quot;2.21.0&quot;,\n\n&quot;services&quot;: {\n    &quot;backend&quot;: {\n        &quot;build&quot;: {\n            &quot;context&quot;: &quot;.&quot;, ...</pre>\n"]]}}