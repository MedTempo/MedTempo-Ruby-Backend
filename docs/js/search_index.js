var search_data = {"index":{"searchIndex":["cassandra","cors","dbprepare","indexget","load","loginpost","medtempotestes","object","optcors","serverconfig","sinatra","auth","testmodule","usersget","userspost","allow()","app()","defaults()","execute()","helpers()","is_filled()","new()","preload()","protection!()","router()","test_1_aaaa()","test_1_userpessoalpost()","test_2_login()","test_indexget_error()","copying","docs-license","dockerfile","gemfile","gemfile.lock","readme","drop-any-table","select-all-kind-of-users","select-all-tables","select-all.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","select.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","create-table","insert.gql","select-one-with-pass.gql","select-one.gql","select.gql"],"longSearchIndex":["cassandra","cors","dbprepare","indexget","load","loginpost","medtempotestes","object","optcors","serverconfig","sinatra","sinatra::auth","testmodule","usersget","userspost","cors::allow()","medtempotestes#app()","serverconfig::defaults()","cassandra#execute()","load::helpers()","cassandra#is_filled()","cassandra::new()","dbprepare::preload()","sinatra::auth#protection!()","load::router()","testmodule#test_1_aaaa()","testmodule#test_1_userpessoalpost()","testmodule#test_2_login()","testmodule#test_indexget_error()","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Cassandra","","Cassandra.html","","<p>Class to connect to Cassandra On Datastax by Graphql API\n"],["Cors","","Cors.html","","<p>Configure Cors Headers\n"],["DbPrepare","","DbPrepare.html","","<p>Load the Graphql Queries on Memory\n"],["IndexGet","","IndexGet.html","",""],["Load","","Load.html","",""],["LoginPost","","LoginPost.html","","<p>Realize Login for any type of user\n"],["MedTempoTestes","","MedTempoTestes.html","",""],["Object","","Object.html","",""],["OptCors","","OptCors.html","",""],["ServerConfig","","ServerConfig.html","","<p>Sinatra Configurations\n"],["Sinatra","","Sinatra.html","","<p>Checks if user is authenticated, if not send a error back to client\n"],["Sinatra::Auth","","Sinatra/Auth.html","",""],["TestModule","","TestModule.html","",""],["UsersGet","","UsersGet.html","",""],["UsersPost","","UsersPost.html","",""],["allow","Cors","Cors.html#method-c-allow","(origin = \"*\", methods = \"POST, GET, PATCH, DELETE, OPTIONS\", credentials = \"true\")",""],["app","MedTempoTestes","MedTempoTestes.html#method-i-app","()",""],["defaults","ServerConfig","ServerConfig.html#method-c-defaults","()",""],["execute","Cassandra","Cassandra.html#method-i-execute","(query, vars = {}, adm = false)",""],["helpers","Load","Load.html#method-c-helpers","()","<p>Load Helpers\n"],["is_filled","Cassandra","Cassandra.html#method-i-is_filled","()",""],["new","Cassandra","Cassandra.html#method-c-new","(config)",""],["preload","DbPrepare","DbPrepare.html#method-c-preload","()",""],["protection!","Sinatra::Auth","Sinatra/Auth.html#method-i-protection-21","()",""],["router","Load","Load.html#method-c-router","()","<p>Load Controllers\n"],["test_1_AAAA","TestModule","TestModule.html#method-i-test_1_AAAA","()",""],["test_1_UserPessoalPost","TestModule","TestModule.html#method-i-test_1_UserPessoalPost","()",""],["test_2_Login","TestModule","TestModule.html#method-i-test_2_Login","()",""],["test_IndexGet_Error","TestModule","TestModule.html#method-i-test_IndexGet_Error","()",""],["COPYING","","COPYING_txt.html","","\n<pre>                   GNU AFFERO GENERAL PUBLIC LICENSE\n                      Version 3, 19 November 2007 ...</pre>\n"],["DOCS-LICENSE","","DOCS-LICENSE_txt.html","","\n<pre>               GNU Free Documentation License\n                Version 1.3, 3 November 2008\n\nCopyright ...</pre>\n"],["Dockerfile","","Dockerfile.html","","<p>FROM ruby:latest as base \n<p>WORKDIR /usr/src/MedTempo-Backend\n<p>COPY ./Gemfile ./Gemfile\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org” # Package Repository\n<p>gem “sinatra” # Web Framework\n<p>gem “puma” …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  argon2 (2.2.0)\n    ffi (~&gt; 1.15)\n    ffi-compiler (~&gt; 1.0) ...</pre>\n"],["Readme","","Readme_md.html","","<p>MedTempo Ruby Backend\n<p><strong>Copyright © 2023 Felipe Chiozzotto Gozzani, Heloísa Real, Juliana Barbosa Sandes</strong> …\n"],["drop-any-table","","db-operations/generic/drop-any-table.html","","<p>mutation DropAnyTable($table: String!){\n\n<pre>drop: dropTable(keyspaceName:&quot;medtempo&quot;, tableName: $table)</pre>\n<p>}\n"],["select-all-kind-of-users","","db-operations/generic/select-all-kind-of-users_txt.html","","<p>query SelectAllUser {\n\n<pre>user_pessoal: usuario_pessoal {\n  values{\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"],["select-all-tables","","db-operations/generic/select-all-tables.html","","<p>query GetTables($keyspace: String!){\n\n<pre>keyspace(name: $keyspace){\n    name\n    tables {\n        name\n   ...</pre>\n"],["select-all.gql","","db-operations/generic/select-all_gql.html","","<p>query GetTables($keyspace: String!){\n\n<pre>keyspace(name: $keyspace){\n    name\n    tables {\n        name\n   ...</pre>\n"],["create-table","","db-operations/user-especialista/create-table_txt.html","","<p>mutation createTableUsersPessoal {\n\n<pre>usuario_especialista: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: ...</pre>\n"],["insert.gql","","db-operations/user-especialista/insert_gql.html","","<p>mutation InsertUserEspecialista(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-especialista/select-one-with-pass_gql.html","","<p>query SelectOneUserEspecialistaWithPass($user: String!){\n\n<pre>usuario_especialista(value: { email: $user }){ ...</pre>\n"],["select-one.gql","","db-operations/user-especialista/select-one_gql.html","","<p>query SelectOneUserEspecialista($user: String!){\n\n<pre>usuario_especialista(value: { email: $user }){\n  values ...</pre>\n"],["select.gql","","db-operations/user-especialista/select_gql.html","","<p>query SelectAllUserEspecialista {\n\n<pre>usuario_especialista {\n  values {\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"],["create-table","","db-operations/user-familhar/create-table_txt.html","","<p>mutation createTableUsersFamilhar {\n\n<pre>usuario_familhar: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: ...</pre>\n"],["insert.gql","","db-operations/user-familhar/insert_gql.html","","<p>mutation InsertUserFamilhar(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-familhar/select-one-with-pass_gql.html","","<p>query SelectOneUserFamilharWithPass($user: String!){\n\n<pre>usuario_familhar(value: { email: $user }){\n  values ...</pre>\n"],["select-one.gql","","db-operations/user-familhar/select-one_gql.html","","<p>query SelectOneUserFamilhar($user: String!){\n\n<pre>usuario_familhar(value: { email: $user }){\n  values {\n   ...</pre>\n"],["create-table","","db-operations/user-pessoal/create-table_txt.html","","<p>mutation createTableUsersPessoal {\n\n<pre>usuario_pessoal: createTable(\n  keyspaceName: &quot;medtempo&quot;\n  tableName: ...</pre>\n"],["insert.gql","","db-operations/user-pessoal/insert_gql.html","","<p>mutation InsertUserPessoal(\n\n<pre>$id: Uuid!,\n$nome: String!,\n$sobrenome: String!,\n$sexo: Boolean!,\n\n$email: ...</pre>\n"],["select-one-with-pass.gql","","db-operations/user-pessoal/select-one-with-pass_gql.html","","<p>query SelectOneUserPessoalWithPass($user: String!){\n\n<pre>usuario_pessoal(value: { email: $user }){\n  values ...</pre>\n"],["select-one.gql","","db-operations/user-pessoal/select-one_gql.html","","<p>query SelectOneUserPessoal($user: String!){\n\n<pre>usuario_pessoal(value: { email: $user }){\n  values {\n    id, ...</pre>\n"],["select.gql","","db-operations/user-pessoal/select_gql.html","","<p>query SelectAllUserPessoal {\n\n<pre>usuario_pessoal {\n  values {\n    id\n    data_criacao\n    data_nascimento ...</pre>\n"]]}}